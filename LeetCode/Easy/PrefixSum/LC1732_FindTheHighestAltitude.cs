namespace LeetCode.Easy.PrefixSum;

/// <summary>
/// 1732. Find the Highest Altitude
/// Условие: дан массив приращений высоты `gain`, где gain[i] — это изменение высоты между точками i и i+1.
/// Нужно вернуть максимальную высоту, достигнутую во время пути.
/// Начальная высота — 0.
///
/// Подход:
/// 1. Начинаем с altitude = 0 (стартовая высота).
/// 2. Для каждого изменения gain[i] добавляем его к текущей высоте.
/// 3. На каждом шаге обновляем максимум.
///
/// Сложность:
/// - Время: O(n)
/// - Память: O(1)
///
/// Пример:
/// Input: gain = [-5,1,5,0,-7]
/// Ход работы:
/// старт = 0
/// +(-5) → -5
/// +(1)  → -4
/// +(5)  → 1 ✅ максимум
/// +(0)  → 1
/// +(-7) → -6
/// Максимальная высота = 1
/// Output: 1
///
/// Ещё пример:
/// Input: gain = [-4,-3,-2,-1,4,3,2]
/// высоты: [0, -4, -7, -9, -10, -6, -3, -1] → максимум = 0
/// Output: 0
/// </summary>
public class Lc1732FindTheHighestAltitude
{
    public int LargestAltitude(int[] gain)
    {
        var altitude = 0; // текущая высота
        var best = 0;     // максимальная высота

        // Идём по каждому изменению высоты
        foreach (var delta in gain)
        {
            altitude += delta;        // обновляем текущую высоту
            if (altitude > best)      // проверяем максимум
                best = altitude;
        }

        return best;
    }
}