namespace LeetCode.Easy.TwoPointers;

/// <summary>
/// 283. Move Zeroes
/// Условие: переместить все нули в конец массива, сохранив порядок ненулевых элементов.
///
/// Подход (два указателя):
/// - pointer указывает, куда ставить следующий ненулевой элемент.
/// - Проходим массив:
///     если nums[i] != 0 → переносим его в nums[pointer].
///     Если i != pointer, обнуляем старую позицию.
///     pointer++.
///
/// Сложность:
/// - Время: O(n)
/// - Память: O(1)
///
/// Пример:
/// Input:  [0,1,0,3,12]
///
/// Output: [1,3,12,0,0]
/// </summary>
public class Lc0283MoveZeroes
{
    public void MoveZeroes(int[] nums)
    {
        var pointer = 0; // позиция, куда ставить следующий ненулевой элемент

        for (var i = 0; i < nums.Length; i++)
        {
            if (nums[i] != 0)
            {
                // Если указатели разные — двигаем элемент вперёд
                if (i != pointer)
                {
                    nums[pointer] = nums[i];
                    nums[i] = 0; // ставим 0 на старое место
                }

                // Сдвигаем pointer вперёд — следующая позиция для ненуля
                pointer++;
            }
        }
    }
}